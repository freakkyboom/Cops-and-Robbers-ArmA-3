/*
    Mission configuration für das Cops‑and‑Robbers‑Framework.
    Dieses File wird von Arma 3 beim Laden einer Mission eingelesen und
    definiert grundlegende Parameter wie Respawnverhalten, Missionstitel
    und verfügbarere Funktionsdateien.  Diese Vorlage ist bewusst
    minimalistisch gehalten und kann beliebig angepasst und erweitert
    werden.  Kommentare sind auf Deutsch, die SQF‑Syntax selbst
    orientiert sich am Standard von Bohemia Interactive.

    Die in diesem Repository enthaltenen Beispiele basieren auf
    allgemein dokumentierten Mechaniken der Arma 3 Missionserstellung.
    Der Bohemia‑Guide erklärt, dass Missionen in überschaubare
    „Tasks“ (Aufgaben) aufgeteilt werden sollten und dass Aufgaben
    verschiedene Zustände wie „created“, „assigned“, „succeeded“ oder
    „failed“ haben【176927070815116†L340-L404】.  Dieses Framework nutzt
    diese Konzepte, um klare Ziele für Räuber und Polizisten zu
    definieren.
*/

author      = "Modder";
onLoadName  = "Cops and Robbers - Malden";
onLoadMission = "Grundgerüst für einen Cops‑and‑Robbers‑Spielmodus auf Malden";
loadScreen  = "\A3\ui_f\data\map_backgrounds\background_terrain_ca.paa";

// Respawn‑Einstellungen: Spieler erscheinen an markierten Punkten (siehe editor‑Marker)
respawn            = 3;        // 3 = BASE: Respawn an Marker mit dem Namen "respawn_west" usw.
respawnDelay       = 3;
respawnTemplates[] = {"MenuPosition"};

// Grundlegende Missionsparameter
class Header
{
    gameType   = "COOP";   // Koop‑Szenario; bei Bedarf ändern
    minPlayers = 2;
    maxPlayers = 40;
};

// Verweise auf zusätzliche Konfigurationsdateien
#include "CfgFunctions.hpp"
disabledAI = 1;                   // Falls nur Spieler
enableDebugConsole = 1;           // 0 auf Live-Server

class CfgRemoteExec
{
    class Functions
    {
        mode = 2;
        jip = 1;
        class BIS_fnc_endMission         { allowedTargets = 0; };
        class BIS_fnc_showNotification   { allowedTargets = 0; };

        // Client-seitige UI Funktionen
        class CR_fnc_addRobberyActions   { allowedTargets = 0; jip = 1; };
        class CR_fnc_addArsenalAction    { allowedTargets = 0; jip = 1; };
        class CR_fnc_addGarageActions    { allowedTargets = 0; jip = 1; };
        class CR_fnc_addLaptopAction     { allowedTargets = 0; jip = 1; };
        class CR_fnc_openArsenal         { allowedTargets = 0; };
        class CR_fnc_robGasStation       { allowedTargets = 0; };
        class CR_fnc_robATM              { allowedTargets = 0; };

        // Task-Management
        class CR_fnc_assignSafehouseTask { allowedTargets = 1; };
        class CR_fnc_assignInterceptTask { allowedTargets = 1; };
        class CR_fnc_finishSafehouseRobber { allowedTargets = 1; };
        class CR_fnc_finishSafehouseCops { allowedTargets = 1; };
        class CR_fnc_notifyCops          { allowedTargets = 1; };
        class CR_fnc_robberyPreventedCops{ allowedTargets = 1; };

        // Server-Only Funktionen
        class CR_fnc_triggerAlarm        { allowedTargets = 2; };
        class CR_fnc_spawnVehicle        { allowedTargets = 2; };
        class CR_fnc_spawnGasLoot        { allowedTargets = 2; };
        class CR_fnc_postGasRobbery      { allowedTargets = 2; };
        class CR_fnc_safehouseSuccess    { allowedTargets = 2; };
        class CR_fnc_startSiren          { allowedTargets = 2; };
        class CR_fnc_stopSiren           { allowedTargets = 2; };
        class CR_fnc_saySirenLocal       { allowedTargets = 0; };
        class CR_fnc_explodeUnit         { allowedTargets = 2; };

        // Globale Funktionen
        class CR_fnc_showID              { allowedTargets = 0; };
    };

    class Commands
    {
        mode = 0;
        jip = 0;
    };
};

class CfgSounds {
  class CR_Siren {
    name = "CR_Siren";
    sound[] = {"sounds\\siren.ogg", 3, 1, 150};
    titles[] = {};
  };
};
